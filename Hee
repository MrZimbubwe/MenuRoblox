local Fluent = loadstring(game:HttpGet("https://github.com/dawid-scripts/Fluent/releases/latest/download/main.lua"))()
local SaveManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/SaveManager.lua"))()
local InterfaceManager = loadstring(game:HttpGet("https://raw.githubusercontent.com/dawid-scripts/Fluent/master/Addons/InterfaceManager.lua"))()

local Window = Fluent:CreateWindow({
    Title = "XeroHub " .. Fluent.Version,
    SubTitle = "by ‡∏Å‡∏π‡πÄ‡∏≠‡∏á",
    TabWidth = 160,
    Size = UDim2.fromOffset(580, 460),
    Acrylic = true, -- The blur may be detectable, setting this to false disables blur entirely
    Theme = "Dark",
    MinimizeKey = Enum.KeyCode.LeftControl -- Used when theres no MinimizeKeybind
})

--Fluent provides Lucide Icons https://lucide.dev/icons/ for the tabs, icons are optional
local Tabs = {
    Main = Window:AddTab({ Title = "Main", Icon = "" }),
    Settings = Window:AddTab({ Title = "Settings", Icon = "settings" })
}

local Options = Fluent.Options

do
    Fluent:Notify({
        Title = "Notification",
        Content = "This is a notification",
        SubContent = "SubContent", -- Optional
        Duration = 5 -- Set to nil to make the notification not disappear
    })



    Tabs.Main:AddParagraph({
        Title = "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µü§†",
        Content = "‡∏Å‡∏π‡∏ä‡∏≠‡∏ö‡∏´‡∏µüëªüåö"
    })



    Tabs.Main:AddButton({
        Title = "‡∏ö‡∏¥‡∏ô‚úàÔ∏è",
        Description = "‡∏Å‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ö‡∏¥‡∏ô",
        Callback = function()
            https://pastebin.com/raw/qWT8nP8b
            
        end
    })



    Tabs.Main:AddButton({
        Title = "‡∏Å‡∏î‡∏ß‡∏≤‡∏õüî•Ô∏è",
        Description = "‡∏Å‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏£‡∏±‡∏ö‡∏Å‡∏î‡πÑ‡∏≠‡πÄ‡∏ó‡∏°‡∏ß‡∏≤‡∏õ",
        Callback = function()
            https://pastebin.com/raw/HK7kTmDL
            
        end
    })
    
    
    
    Tabs.Main:AddButton({
        Title = "‡∏ó‡∏∞‡∏•ü•∑‡∏∏Ô∏è",
        Description = "‡∏ó‡∏∞‡∏•‡∏∏",
        Callback = function()
            https://pastebin.com/raw/SqNBCt6C
            
        end
    })
    
    
    
    Tabs.Main:AddButton({
        Title = "‡∏ß‡∏¥‡πà‡∏á‡πÄ‡∏£‡πá‡∏ß√ó4üèÉÔ∏è",
        Description = "‡∏ß‡∏¥‡πà‡∏á‡πÄ‡∏£‡πá‡∏ß‡∏Å‡∏ß‡πà‡∏≤‡πÄ‡∏î‡∏¥‡∏°",
        Callback = function()
            https://pastebin.com/raw/pZhkm5mD
            
        end
    })
    
    
    
    Tabs.Main:AddButton({
        Title = "‡∏Ü‡πà‡∏≤‡∏ö‡∏≠‡∏ó‚öîÔ∏èÔ∏è",
        Description = "‡∏Ñ‡∏¥‡∏•‡∏ö‡∏≠‡∏ó",
        Callback = function()
            https://pastebin.com/raw/DczvQZyU
            
        end
    })    
    
    
    
    Tabs.Main:AddButton({
        Title = "‡∏•‡πá‡∏≠‡∏Ñ‡∏´‡∏±‡∏ßüéØÔ∏èÔ∏è",
        Description = "‡∏≠‡∏¥‡∏ó‡∏ö‡∏≠‡∏ó",
        Callback = function()
            https://gist.githubusercontent.com/Aimboter477387/582af6aec49782899d5d375ab239039e/raw
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "‡πÄ‡∏™‡∏Å‡∏Ç‡∏≠‡∏áüéÅÔ∏èÔ∏è",
        Description = "‡∏Å‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏™‡∏Å",
        Callback = function()
            https://raw.githubusercontent.com/yofriendfromschool1/Sky-Hub-Backup/main/gametoolgiver.lua
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "‡∏ö‡∏π‡∏™fpsüî•Ô∏èÔ∏è",
        Description = "‡πÅ‡∏£‡∏á",
        Callback = function()
            https://raw.githubusercontent.com/XNEOFF/FPS-BOOSTER/main/FPSBooster.txt
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "Hitbox 32%üéØÔ∏èÔ∏è",
        Description = "Hithox",
        Callback = function()
            https://pastebin.com/raw/iRyTtfmf
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "GODÔ∏èÔ∏è",
        Description = "‡∏≠‡∏°‡∏ï‡∏∞",
        Callback = function()
            https://pastebin.com/raw/EjrTrMwC
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "Keyboard‚å®Ô∏èÔ∏èÔ∏è",
        Description = "‡∏Ñ‡∏µ‡∏¢‡πå‡∏ö‡∏≠‡∏î",
        Callback = function()
            https://raw.githubusercontent.com/Xxtan31/Ata/main/deltakeyboardcrack.txt
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "‡∏´‡∏≤‡∏¢‡∏ï‡∏±‡∏ßü´•Ô∏èÔ∏è",
        Description = "‡∏≠‡∏°‡∏ï‡∏∞",
        Callback = function()
            https://pastebin.com/raw/3Rnd9rHf
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "infinite Yeidüë∫Ô∏èÔ∏è",
        Description = "Admins",
        Callback = function()
            https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "Ghost HubüëªÔ∏èÔ∏è",
        Description = "Ghost",
        Callback = function()
            https://raw.githubusercontent.com/GhostPlayer352/Test4/main/GhostHub
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "Admins Namelessüé©Ô∏èÔ∏è",
        Description = "admins2",
        Callback = function()
            https://raw.githubusercontent.com/FilteringEnabled/NamelessAdmin/main/Source
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "‡∏ä‡∏±‡∏Å‡πÄ‡∏ß‡πà‡∏≤ü™ÅÔ∏èÔ∏è",
        Description = "‡∏´‡∏≥",
        Callback = function()
            https://pastefy.app/wa3v2Vgm/raw
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "Flingü™ΩÔ∏èÔ∏è",
        Description = "‡πÄ‡∏ï‡∏∞",
        Callback = function()
            https://pastebin.com/raw/TXMNj1yy
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "ESP PLAYERüë•Ô∏èÔ∏è",
        Description = "ESP",
        Callback = function()
            https://pastebin.com/raw/ZkLhNuDL
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "ESP BOT,NPCüëæü§ñÔ∏èÔ∏è",
        Description = "",
        Callback = function()
            https://pastebin.com/raw/q26QuUBF
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "BlueLock‚öΩÔ∏èÔ∏è",
        Description = "Map",
        Callback = function()
            https://raw.githubusercontent.com/RedJDark/CONTROL-SCRIPTT/refs/heads/main/CONTROL
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "Ninja Legendü•∑Ô∏èÔ∏è",
        Description = "Map",
        Callback = function()
            https://raw.githubusercontent.com/rndmq/Serverlist/refs/heads/main/Loader
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "AutoBondüí∏Ô∏èÔ∏è",
        Description = "DearRailüöÑ",
        Callback = function()
            https://raw.githubusercontent.com/thiennrb7/Script/refs/heads/main/autobond
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "Dead RailüöÜÔ∏èÔ∏è",
        Description = "Map",
        Callback = function()
            https://raw.githubusercontent.com/ringtaa/deadrailsui.github.io/refs/heads/main/RINGTA.LUA
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "STRONGEST PUNCHüëäÔ∏èÔ∏è",
        Description = "Map",
        Callback = function()
            https://rawscripts.net/raw/STRONGEST-PUNCH-SIMULATOR-Automatic-farm-4508
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "EvadeüèÉÔ∏èÔ∏è",
        Description = "Map",
        Callback = function()
            https://raw.githubusercontent.com/Unknownproooolucky/Draconic-Hub-X/refs/heads/main/Files/Games/Evade/Overhaul.lua
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "BrookhavenüèòÔ∏èÔ∏èÔ∏è",
        Description = "Map",
        Callback = function()
            https://raw.githubusercontent.com/M1ZZ001/BrookhavenR4D/main/Brookhaven%20R4D%20Script
            
        end
    })
        
    
    
    Tabs.Main:AddButton({
        Title = "Brookhaven Musicüè°üé∂Ô∏èÔ∏è",
        Description = "https://rawscripts.net/raw/Brookhaven-RP-Audio-Player-Script-Brookhaven-RP-33531",
        Callback = function()
            
            
        end
    })
    local Toggle = Tabs.Main:AddToggle("MyToggle", {Title = "Toggle", Default = false })

    Toggle:OnChanged(function()
        print("Toggle changed:", Options.MyToggle.Value)
    end)

    Options.MyToggle:SetValue(false)


    
    local Slider = Tabs.Main:AddSlider("Slider", {
        Title = "Slider",
        Description = "This is a slider",
        Default = 2,
        Min = 0,
        Max = 5,
        Rounding = 1,
        Callback = function(Value)
            print("Slider was changed:", Value)
        end
    })

    Slider:OnChanged(function(Value)
        print("Slider changed:", Value)
    end)

    Slider:SetValue(3)



    local Dropdown = Tabs.Main:AddDropdown("Dropdown", {
        Title = "Dropdown",
        Values = {"one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen"},
        Multi = false,
        Default = 1,
    })

    Dropdown:SetValue("four")

    Dropdown:OnChanged(function(Value)
        print("Dropdown changed:", Value)
    end)


    
    local MultiDropdown = Tabs.Main:AddDropdown("MultiDropdown", {
        Title = "Dropdown",
        Description = "You can select multiple values.",
        Values = {"one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen"},
        Multi = true,
        Default = {"seven", "twelve"},
    })

    MultiDropdown:SetValue({
        three = true,
        five = true,
        seven = false
    })

    MultiDropdown:OnChanged(function(Value)
        local Values = {}
        for Value, State in next, Value do
            table.insert(Values, Value)
        end
        print("Mutlidropdown changed:", table.concat(Values, ", "))
    end)



    local Colorpicker = Tabs.Main:AddColorpicker("Colorpicker", {
        Title = "Colorpicker",
        Default = Color3.fromRGB(96, 205, 255)
    })

    Colorpicker:OnChanged(function()
        print("Colorpicker changed:", Colorpicker.Value)
    end)
    
    Colorpicker:SetValueRGB(Color3.fromRGB(0, 255, 140))



    local TColorpicker = Tabs.Main:AddColorpicker("TransparencyColorpicker", {
        Title = "Colorpicker",
        Description = "but you can change the transparency.",
        Transparency = 0,
        Default = Color3.fromRGB(96, 205, 255)
    })

    TColorpicker:OnChanged(function()
        print(
            "TColorpicker changed:", TColorpicker.Value,
            "Transparency:", TColorpicker.Transparency
        )
    end)



    local Keybind = Tabs.Main:AddKeybind("Keybind", {
        Title = "KeyBind",
        Mode = "Toggle", -- Always, Toggle, Hold
        Default = "LeftControl", -- String as the name of the keybind (MB1, MB2 for mouse buttons)

        -- Occurs when the keybind is clicked, Value is `true`/`false`
        Callback = function(Value)
            print("Keybind clicked!", Value)
        end,

        -- Occurs when the keybind itself is changed, `New` is a KeyCode Enum OR a UserInputType Enum
        ChangedCallback = function(New)
            print("Keybind changed!", New)
        end
    })

    -- OnClick is only fired when you press the keybind and the mode is Toggle
    -- Otherwise, you will have to use Keybind:GetState()
    Keybind:OnClick(function()
        print("Keybind clicked:", Keybind:GetState())
    end)

    Keybind:OnChanged(function()
        print("Keybind changed:", Keybind.Value)
    end)

    task.spawn(function()
        while true do
            wait(1)

            -- example for checking if a keybind is being pressed
            local state = Keybind:GetState()
            if state then
                print("Keybind is being held down")
            end

            if Fluent.Unloaded then break end
        end
    end)

    Keybind:SetValue("MB2", "Toggle") -- Sets keybind to MB2, mode to Hold


    local Input = Tabs.Main:AddInput("Input", {
        Title = "Input",
        Default = "Default",
        Placeholder = "Placeholder",
        Numeric = false, -- Only allows numbers
        Finished = false, -- Only calls callback when you press enter
        Callback = function(Value)
            print("Input changed:", Value)
        end
    })

    Input:OnChanged(function()
        print("Input updated:", Input.Value)
    end)
end


-- Addons:
-- SaveManager (Allows you to have a configuration system)
-- InterfaceManager (Allows you to have a interface managment system)

-- Hand the library over to our managers
SaveManager:SetLibrary(Fluent)
InterfaceManager:SetLibrary(Fluent)

-- Ignore keys that are used by ThemeManager.
-- (we dont want configs to save themes, do we?)
SaveManager:IgnoreThemeSettings()

-- You can add indexes of elements the save manager should ignore
SaveManager:SetIgnoreIndexes({})

-- use case for doing it this way:
-- a script hub could have themes in a global folder
-- and game configs in a separate folder per game
InterfaceManager:SetFolder("FluentScriptHub")
SaveManager:SetFolder("FluentScriptHub/specific-game")

InterfaceManager:BuildInterfaceSection(Tabs.Settings)
SaveManager:BuildConfigSection(Tabs.Settings)


Window:SelectTab(1)

Fluent:Notify({
    Title = "Fluent",
    Content = "The script has been loaded.",
    Duration = 8
})

-- You can use the SaveManager:LoadAutoloadConfig() to load a config
-- which has been marked to be one that auto loads!
SaveManager:LoadAutoloadConfig()
